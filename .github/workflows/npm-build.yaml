name: Caching with npm

on: push

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
        # Checkout as many commits as needed for the diff
          fetch-depth: 2
      - shell: pwsh
      # Give an id to the step, so we can reference it later
        id: check_file_changed
        run: |
          # Diff HEAD with the previous commit
          $diff = git diff --name-only HEAD^ HEAD
          echo $diff
          # Check if a file under docs/ or with the .md extension has changed (added, modified, deleted)
          $SourceDiff = $diff | Where-Object { $_ -match '^./' -or $_ -match '.json$' }
          echo $SourceDiff
          $HasDiff = $SourceDiff.Length -gt 0
          echo $HasDiff
          # Set the output named "docs_changed"
          Write-Host "::set-output name=docs_changed::$HasDiff"
      
      - name: Set Up node version 12
        uses: actions/setup-node@v1
        with:
          node-version: '12'
      - if: steps.check_file_changed.outputs.docs_changed == 'True'
        run: npm install
      
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
  tests:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v2
      - name: Set Up node version 12
        uses: actions/setup-node@v1
        with:
          node-version: '12'
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      - name: Run Tests
        run: npm run test
  
  release:
    needs: tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Get the Tag
      id: get_tag_name
      run: echo ::set-output name=GIT_TAG_NAME::${GITHUB_SHA}
    - name: Docker push
      env:
        DOCKER_USER: ${{secrets.DOCKER_USER}}
        DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
        IMAGE: zero101010/test-ci-node:${{ steps.get_tag_name.outputs.GIT_TAG_NAME}}
      run: |
        docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
        docker build -t $IMAGE .
        docker push $IMAGE
